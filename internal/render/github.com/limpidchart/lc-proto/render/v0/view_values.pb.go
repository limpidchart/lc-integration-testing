// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: view_values.proto

package render

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChartViewBarsValues represents options for bars values.
type ChartViewBarsValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of configured bars datasets.
	BarsDatasets []*ChartViewBarsValues_BarsDataset `protobuf:"bytes,1,rep,name=bars_datasets,json=barsDatasets,proto3" json:"bars_datasets,omitempty"`
}

func (x *ChartViewBarsValues) Reset() {
	*x = ChartViewBarsValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewBarsValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewBarsValues) ProtoMessage() {}

func (x *ChartViewBarsValues) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewBarsValues.ProtoReflect.Descriptor instead.
func (*ChartViewBarsValues) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{0}
}

func (x *ChartViewBarsValues) GetBarsDatasets() []*ChartViewBarsValues_BarsDataset {
	if x != nil {
		return x.BarsDatasets
	}
	return nil
}

// ChartViewPointsValues represents options for point values.
type ChartViewPointsValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of configured points.
	Points []*ChartViewPointsValues_Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *ChartViewPointsValues) Reset() {
	*x = ChartViewPointsValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewPointsValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewPointsValues) ProtoMessage() {}

func (x *ChartViewPointsValues) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewPointsValues.ProtoReflect.Descriptor instead.
func (*ChartViewPointsValues) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{1}
}

func (x *ChartViewPointsValues) GetPoints() []*ChartViewPointsValues_Point {
	if x != nil {
		return x.Points
	}
	return nil
}

// ChartViewScalarValues represents options for scalar values.
type ChartViewScalarValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of scalar values.
	Values []float32 `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ChartViewScalarValues) Reset() {
	*x = ChartViewScalarValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewScalarValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewScalarValues) ProtoMessage() {}

func (x *ChartViewScalarValues) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewScalarValues.ProtoReflect.Descriptor instead.
func (*ChartViewScalarValues) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{2}
}

func (x *ChartViewScalarValues) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// ChartViewBarsColors represents options to configure bars values colors.
type ChartViewBarsValues_ChartViewBarsColors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fill   *ChartElementColor `protobuf:"bytes,1,opt,name=fill,proto3" json:"fill,omitempty"`
	Stroke *ChartElementColor `protobuf:"bytes,2,opt,name=stroke,proto3" json:"stroke,omitempty"`
}

func (x *ChartViewBarsValues_ChartViewBarsColors) Reset() {
	*x = ChartViewBarsValues_ChartViewBarsColors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewBarsValues_ChartViewBarsColors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewBarsValues_ChartViewBarsColors) ProtoMessage() {}

func (x *ChartViewBarsValues_ChartViewBarsColors) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewBarsValues_ChartViewBarsColors.ProtoReflect.Descriptor instead.
func (*ChartViewBarsValues_ChartViewBarsColors) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChartViewBarsValues_ChartViewBarsColors) GetFill() *ChartElementColor {
	if x != nil {
		return x.Fill
	}
	return nil
}

func (x *ChartViewBarsValues_ChartViewBarsColors) GetStroke() *ChartElementColor {
	if x != nil {
		return x.Stroke
	}
	return nil
}

// BarsDataset represents a single dataset with several bars.
type ChartViewBarsValues_BarsDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []float32                                `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	Colors *ChartViewBarsValues_ChartViewBarsColors `protobuf:"bytes,2,opt,name=colors,proto3" json:"colors,omitempty"`
}

func (x *ChartViewBarsValues_BarsDataset) Reset() {
	*x = ChartViewBarsValues_BarsDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewBarsValues_BarsDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewBarsValues_BarsDataset) ProtoMessage() {}

func (x *ChartViewBarsValues_BarsDataset) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewBarsValues_BarsDataset.ProtoReflect.Descriptor instead.
func (*ChartViewBarsValues_BarsDataset) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChartViewBarsValues_BarsDataset) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ChartViewBarsValues_BarsDataset) GetColors() *ChartViewBarsValues_ChartViewBarsColors {
	if x != nil {
		return x.Colors
	}
	return nil
}

// Point represents parameters for a single point.
type ChartViewPointsValues_Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *ChartViewPointsValues_Point) Reset() {
	*x = ChartViewPointsValues_Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_values_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartViewPointsValues_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartViewPointsValues_Point) ProtoMessage() {}

func (x *ChartViewPointsValues_Point) ProtoReflect() protoreflect.Message {
	mi := &file_view_values_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartViewPointsValues_Point.ProtoReflect.Descriptor instead.
func (*ChartViewPointsValues_Point) Descriptor() ([]byte, []int) {
	return file_view_values_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ChartViewPointsValues_Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ChartViewPointsValues_Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

var File_view_values_proto protoreflect.FileDescriptor

var file_view_values_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x42, 0x61, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x4c, 0x0a, 0x0d, 0x62, 0x61, 0x72, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x42, 0x61, 0x72, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x0c, 0x62, 0x61, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x77,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x42, 0x61, 0x72, 0x73, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x1a, 0x6e, 0x0a, 0x0b, 0x42, 0x61, 0x72, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x61, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x42, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x23, 0x0a,
	0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x79, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x69, 0x65, 0x77, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x69, 0x6d, 0x70, 0x69, 0x64, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2f, 0x6c, 0x63,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x30,
	0x3b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_view_values_proto_rawDescOnce sync.Once
	file_view_values_proto_rawDescData = file_view_values_proto_rawDesc
)

func file_view_values_proto_rawDescGZIP() []byte {
	file_view_values_proto_rawDescOnce.Do(func() {
		file_view_values_proto_rawDescData = protoimpl.X.CompressGZIP(file_view_values_proto_rawDescData)
	})
	return file_view_values_proto_rawDescData
}

var file_view_values_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_view_values_proto_goTypes = []interface{}{
	(*ChartViewBarsValues)(nil),                     // 0: render.ChartViewBarsValues
	(*ChartViewPointsValues)(nil),                   // 1: render.ChartViewPointsValues
	(*ChartViewScalarValues)(nil),                   // 2: render.ChartViewScalarValues
	(*ChartViewBarsValues_ChartViewBarsColors)(nil), // 3: render.ChartViewBarsValues.ChartViewBarsColors
	(*ChartViewBarsValues_BarsDataset)(nil),         // 4: render.ChartViewBarsValues.BarsDataset
	(*ChartViewPointsValues_Point)(nil),             // 5: render.ChartViewPointsValues.Point
	(*ChartElementColor)(nil),                       // 6: render.ChartElementColor
}
var file_view_values_proto_depIdxs = []int32{
	4, // 0: render.ChartViewBarsValues.bars_datasets:type_name -> render.ChartViewBarsValues.BarsDataset
	5, // 1: render.ChartViewPointsValues.points:type_name -> render.ChartViewPointsValues.Point
	6, // 2: render.ChartViewBarsValues.ChartViewBarsColors.fill:type_name -> render.ChartElementColor
	6, // 3: render.ChartViewBarsValues.ChartViewBarsColors.stroke:type_name -> render.ChartElementColor
	3, // 4: render.ChartViewBarsValues.BarsDataset.colors:type_name -> render.ChartViewBarsValues.ChartViewBarsColors
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_view_values_proto_init() }
func file_view_values_proto_init() {
	if File_view_values_proto != nil {
		return
	}
	file_color_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_view_values_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewBarsValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_values_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewPointsValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_values_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewScalarValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_values_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewBarsValues_ChartViewBarsColors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_values_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewBarsValues_BarsDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_values_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartViewPointsValues_Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_view_values_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_view_values_proto_goTypes,
		DependencyIndexes: file_view_values_proto_depIdxs,
		MessageInfos:      file_view_values_proto_msgTypes,
	}.Build()
	File_view_values_proto = out.File
	file_view_values_proto_rawDesc = nil
	file_view_values_proto_goTypes = nil
	file_view_values_proto_depIdxs = nil
}
