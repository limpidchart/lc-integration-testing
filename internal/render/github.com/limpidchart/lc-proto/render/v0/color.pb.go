// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: color.proto

package render

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChartElementColor represents options to configure color for chart elements.
type ChartElementColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of color.
	// Can contain HEX or RGB value.
	//
	// Types that are assignable to ColorValue:
	//	*ChartElementColor_ColorHex
	//	*ChartElementColor_ColorRgb
	ColorValue isChartElementColor_ColorValue `protobuf_oneof:"color_value"`
}

func (x *ChartElementColor) Reset() {
	*x = ChartElementColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_color_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartElementColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartElementColor) ProtoMessage() {}

func (x *ChartElementColor) ProtoReflect() protoreflect.Message {
	mi := &file_color_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartElementColor.ProtoReflect.Descriptor instead.
func (*ChartElementColor) Descriptor() ([]byte, []int) {
	return file_color_proto_rawDescGZIP(), []int{0}
}

func (m *ChartElementColor) GetColorValue() isChartElementColor_ColorValue {
	if m != nil {
		return m.ColorValue
	}
	return nil
}

func (x *ChartElementColor) GetColorHex() string {
	if x, ok := x.GetColorValue().(*ChartElementColor_ColorHex); ok {
		return x.ColorHex
	}
	return ""
}

func (x *ChartElementColor) GetColorRgb() *ChartElementColor_RGB {
	if x, ok := x.GetColorValue().(*ChartElementColor_ColorRgb); ok {
		return x.ColorRgb
	}
	return nil
}

type isChartElementColor_ColorValue interface {
	isChartElementColor_ColorValue()
}

type ChartElementColor_ColorHex struct {
	ColorHex string `protobuf:"bytes,1,opt,name=color_hex,json=colorHex,proto3,oneof"`
}

type ChartElementColor_ColorRgb struct {
	ColorRgb *ChartElementColor_RGB `protobuf:"bytes,2,opt,name=color_rgb,json=colorRgb,proto3,oneof"`
}

func (*ChartElementColor_ColorHex) isChartElementColor_ColorValue() {}

func (*ChartElementColor_ColorRgb) isChartElementColor_ColorValue() {}

// RGB contains values for RGB color.
type ChartElementColor_RGB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G uint32 `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B uint32 `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *ChartElementColor_RGB) Reset() {
	*x = ChartElementColor_RGB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_color_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartElementColor_RGB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartElementColor_RGB) ProtoMessage() {}

func (x *ChartElementColor_RGB) ProtoReflect() protoreflect.Message {
	mi := &file_color_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartElementColor_RGB.ProtoReflect.Descriptor instead.
func (*ChartElementColor_RGB) Descriptor() ([]byte, []int) {
	return file_color_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChartElementColor_RGB) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *ChartElementColor_RGB) GetG() uint32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *ChartElementColor_RGB) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

var File_color_proto protoreflect.FileDescriptor

var file_color_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x65, 0x78, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x72, 0x67, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x47, 0x42, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x67, 0x62, 0x1a, 0x2f, 0x0a, 0x03, 0x52, 0x47, 0x42, 0x12,
	0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x62, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6d, 0x70, 0x69, 0x64, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x2f, 0x6c, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x30, 0x3b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_color_proto_rawDescOnce sync.Once
	file_color_proto_rawDescData = file_color_proto_rawDesc
)

func file_color_proto_rawDescGZIP() []byte {
	file_color_proto_rawDescOnce.Do(func() {
		file_color_proto_rawDescData = protoimpl.X.CompressGZIP(file_color_proto_rawDescData)
	})
	return file_color_proto_rawDescData
}

var file_color_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_color_proto_goTypes = []interface{}{
	(*ChartElementColor)(nil),     // 0: render.ChartElementColor
	(*ChartElementColor_RGB)(nil), // 1: render.ChartElementColor.RGB
}
var file_color_proto_depIdxs = []int32{
	1, // 0: render.ChartElementColor.color_rgb:type_name -> render.ChartElementColor.RGB
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_color_proto_init() }
func file_color_proto_init() {
	if File_color_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_color_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartElementColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_color_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartElementColor_RGB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_color_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ChartElementColor_ColorHex)(nil),
		(*ChartElementColor_ColorRgb)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_color_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_color_proto_goTypes,
		DependencyIndexes: file_color_proto_depIdxs,
		MessageInfos:      file_color_proto_msgTypes,
	}.Build()
	File_color_proto = out.File
	file_color_proto_rawDesc = nil
	file_color_proto_goTypes = nil
	file_color_proto_depIdxs = nil
}
